include 'bootloaderstruct.inc'

use64

BASE := 0x408000

org BASE

ehdr:
.EI_MAG0         db 0x7f
.EI_MAG1         db 'E'
.EI_MAG2         db 'L'
.EI_MAG3         db 'F'
.EI_CLASS        db 2
.EI_DATA         db 1
.EI_VERSION      db 1
.EI_OSABI        db 0
.EI_ABIVERSION   db 0
.EI_PAD          rb 6
.EI_NIDENT       db 16

.e_type         dw 2
.e_machine      dw 62
.e_version      dd 1
.e_entry        dq main
.e_phoff        dq phdr - BASE
.e_shoff        dq 0
.e_flags        dd 0
.e_ehsize       dw phdr - ehdr
.e_phentsize    dw endphdr1 - phdr
.e_phnum        dw 2
.e_shentsize    dw 0
.e_shnum        dw 0
.e_shstrndx     dw 0

phdr:
.p_type   dd 1
.p_flags  dd 0x1 or 0x4
.p_offset dq 0
.p_vaddr  dq BASE
.p_paddr  dq 0; ununsed
.p_filesz dq endcode - BASE
.p_memsz  dq endcode - BASE
.p_align  dq 0x1000

endphdr1:

.p_type   dd 1
.p_flags  dd 0x4
.p_offset dq startdata - BASE
.p_vaddr  dq startdata + 0x2000
.p_paddr  dq 0; ununsed
.p_filesz dq enddata - startdata
.p_memsz  dq enddata - startdata
.p_align  dq 0x1000


startcode:
main:

sub rsp, 4*8

mov r9, [rcx+BOOTLOADER_STRUCT.framebufferAddress]
mov [FramebufferAddress], r9
mov r9, [rcx+BOOTLOADER_STRUCT.pixelsPerScanLine]
mov [PixelsPerScanLine], r9


mov [cur_x], 0

loop0:

mov [pix_y], 0

loop1:
  mov [pix_x], 0
  xor rcx, rcx
  add rcx, [PixelsPerScanLine]
  imul rcx, 4
  imul rcx, [pix_y]

  xor r13, r13
  xor rdx, rdx
  mov rbx, HelloStr
  add rbx, [cur_x]
  mov dl, [rbx]
  sub dl, 65
  add r13, rdx
  imul r13, 16
  add r13, letters
  lea rbx, [r13]
  add rbx, [pix_y]
  mov byte dl, [rbx]
loop2:
  rol dl, 1
  mov bl, dl
  and bl, 0x1
  mov rax, [FramebufferAddress]
  mov r9, rcx
  mov r8, 0
  add r8, [cur_x]
  imul r8, 9*4
  add r9, r8
  cmp bl, 0x1
  jne skip
  mov dword [rax+r9], 0xffffffff
  jmp done
skip:
  mov dword [rax+r9], 0x00000000
done:

  add rcx, 4
  inc [pix_x]
  cmp [pix_x], 8
  jne loop2

  inc [pix_y]
  cmp [pix_y], 16
  jne loop1

  inc [cur_x]
  cmp [cur_x], 10
  jne loop0

infinite:
jmp infinite

add rsp, 4*8
ret

endcode:

startdata:

cur_x dq 0
pix_x dq 0
pix_y dq 0
FramebufferAddress dq ?
PixelsPerScanLine  dq ?
HelloStr           db 'H', 'E', 'L', 'L', 'O', 'W', 'O', 'R', 'L', 'D', 0

fontstart:

numbers:
db 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xd6, 0xd6, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x06, 0x3c, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x38, 0x60, 0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfe, 0xc6, 0x06, 0x06, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x06, 0x06, 0x0c, 0x78, 0x00, 0x00, 0x00, 0x00

letters:
db 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x66, 0x66, 0x66, 0x66, 0xfc, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xde, 0xc6, 0xc6, 0x66, 0x3a, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xe6, 0x66, 0x66, 0x6c, 0x78, 0x78, 0x6c, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xf0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xde, 0x7c, 0x0c, 0x0e, 0x00, 0x00
db 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x60, 0x38, 0x0c, 0x06, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xd6, 0xfe, 0xee, 0x6c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x7c, 0x38, 0x38, 0x7c, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00
db 0x00, 0x00, 0xfe, 0xc6, 0x86, 0x0c, 0x18, 0x30, 0x60, 0xc2, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00

fontend:
HelloWorld        db 'H', 13, 0

enddata:

endfile:
